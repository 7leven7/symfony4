diff --git a/src/DataFixtures/A0CommentFixture.php b/src/DataFixtures/A0CommentFixture.php
new file mode 100644
index 0000000..8f72d05
--- /dev/null
+++ b/src/DataFixtures/A0CommentFixture.php
@@ -0,0 +1,31 @@
+<?php
+
+namespace App\DataFixtures;
+
+use App\Entity\Article;
+use App\Entity\Comment;
+use Doctrine\Common\DataFixtures\DependentFixtureInterface;
+use Doctrine\Common\Persistence\ObjectManager;
+
+class A0CommentFixture extends BaseFixture implements DependentFixtureInterface
+{
+    protected function loadData(ObjectManager $manager)
+    {
+        $this->createMany(Comment::class, 100, function(Comment $comment) {
+            $comment->setContent(
+                $this->faker->boolean ? $this->faker->paragraph : $this->faker->sentences(2, true)
+            );
+
+            $comment->setAuthorName($this->faker->name);
+            $comment->setCreatedAt($this->faker->dateTimeBetween('-1 months', '-1 seconds'));
+            $comment->setArticle($this->getRandomReference(Article::class));
+        });
+
+        $manager->flush();
+    }
+
+    public function getDependencies()
+    {
+        return [ArticleFixture::class];
+    }
+}
diff --git a/src/DataFixtures/CommentFixture.php b/src/DataFixtures/CommentFixture.php
deleted file mode 100644
index 4a4dfd3..0000000
--- a/src/DataFixtures/CommentFixture.php
+++ /dev/null
@@ -1,25 +0,0 @@
-<?php
-
-namespace App\DataFixtures;
-
-use App\Entity\Article;
-use App\Entity\Comment;
-use Doctrine\Common\Persistence\ObjectManager;
-
-class CommentFixture extends BaseFixture
-{
-    protected function loadData(ObjectManager $manager)
-    {
-        $this->createMany(Comment::class, 100, function(Comment $comment) {
-            $comment->setContent(
-                $this->faker->boolean ? $this->faker->paragraph : $this->faker->sentences(2, true)
-            );
-
-            $comment->setAuthorName($this->faker->name);
-            $comment->setCreatedAt($this->faker->dateTimeBetween('-1 months', '-1 seconds'));
-            $comment->setArticle($this->getRandomReference(Article::class));
-        });
-
-        $manager->flush();
-    }
-}
