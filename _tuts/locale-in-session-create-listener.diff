diff --git a/config/services.yaml b/config/services.yaml
index a15b58b0..b21e3fcc 100644
--- a/config/services.yaml
+++ b/config/services.yaml
@@ -22,6 +22,7 @@ services:
         bind:
             $markdownLogger: '@monolog.logger.markdown'
             $isDebug: '%kernel.debug%'
+            $defaultLocale: '%locale%'
 
     # custom aliases for autowiring
     Nexy\Slack\Client: '@nexy_slack.client'
diff --git a/src/EventSubscriber/TranslatableLocaleSubscriber.php b/src/EventSubscriber/TranslatableLocaleSubscriber.php
new file mode 100644
index 00000000..6d50be02
--- /dev/null
+++ b/src/EventSubscriber/TranslatableLocaleSubscriber.php
@@ -0,0 +1,43 @@
+<?php
+
+namespace App\EventSubscriber;
+
+use Symfony\Component\HttpKernel\Event\GetResponseEvent;
+use Symfony\Component\HttpKernel\KernelEvents;
+use Symfony\Component\EventDispatcher\EventSubscriberInterface;
+
+class TranslatableLocaleSubscriber implements EventSubscriberInterface
+{
+    const SESSION_KEY = '_translatable_locale';
+
+    private $defaultLocale;
+
+    public function __construct($defaultLocale)
+    {
+        $this->defaultLocale = $defaultLocale;
+    }
+
+    public function onKernelRequest(GetResponseEvent $event)
+    {
+        $request = $event->getRequest();
+        if (!$request->hasPreviousSession()) {
+            return;
+        }
+
+        // try to see if the locale has been set as a _locale routing parameter
+        if ($locale = $request->query->get(self::SESSION_KEY)) {
+            $request->getSession()->set(self::SESSION_KEY, $locale);
+        } else {
+            // if no explicit locale has been set on this request, use one from the session
+            $request->setLocale($request->getSession()->get(self::SESSION_KEY, $this->defaultLocale));
+        }
+    }
+
+    public static function getSubscribedEvents()
+    {
+        return [
+            // must be registered before (i.e. with a higher priority than) the default Locale listener
+            KernelEvents::REQUEST => [['onKernelRequest', 20]],
+        ];
+    }
+}
