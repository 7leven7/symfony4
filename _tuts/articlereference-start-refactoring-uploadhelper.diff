diff --git a/config/packages/oneup_flysystem.yaml b/config/packages/oneup_flysystem.yaml
index 513d534d..5a039774 100644
--- a/config/packages/oneup_flysystem.yaml
+++ b/config/packages/oneup_flysystem.yaml
@@ -4,6 +4,13 @@ oneup_flysystem:
         public_uploads_adapter:
             local:
                 directory: '%kernel.project_dir%/public/%uploads_base_url%'
+
+        private_uploads_adapter:
+            local:
+                directory: '%kernel.project_dir%/var/uploads'
+
     filesystems:
         public_uploads_filesystem:
             adapter: public_uploads_adapter
+        private_uploads_filesystem:
+            adapter: private_uploads_adapter
diff --git a/config/services.yaml b/config/services.yaml
index 4429414b..d023bd48 100644
--- a/config/services.yaml
+++ b/config/services.yaml
@@ -22,6 +22,7 @@ services:
             $markdownLogger: '@monolog.logger.markdown'
             $isDebug: '%kernel.debug%'
             $publicUploadsFilesystem: '@oneup_flysystem.public_uploads_filesystem_filesystem'
+            $privateUploadsFilesystem: '@oneup_flysystem.private_uploads_filesystem_filesystem'
             $uploadedAssetsBaseUrl: '%uploads_base_url%'
 
     # custom aliases for autowiring
diff --git a/src/Service/UploaderHelper.php b/src/Service/UploaderHelper.php
index 3b557796..209e5126 100644
--- a/src/Service/UploaderHelper.php
+++ b/src/Service/UploaderHelper.php
@@ -16,15 +16,18 @@ class UploaderHelper
 
     private $filesystem;
 
+    private $privateFilesystem;
+
     private $requestStack;
 
     private $logger;
 
     private $publicAssetBaseUrl;
-
-    public function __construct(FilesystemInterface $publicUploadsFilesystem, RequestStack $requestStack, LoggerInterface $logger, string $uploadedAssetsBaseUrl)
+    
+    public function __construct(FilesystemInterface $publicUploadsFilesystem, FilesystemInterface $privateUploadsFilesystem, RequestStack $requestStack, LoggerInterface $logger, string $uploadedAssetsBaseUrl)
     {
         $this->filesystem = $publicUploadsFilesystem;
+        $this->privateFilesystem = $privateUploadsFilesystem;
         $this->requestStack = $requestStack;
         $this->logger = $logger;
         $this->publicAssetBaseUrl = $uploadedAssetsBaseUrl;
@@ -80,4 +83,28 @@ class UploaderHelper
             ->getCurrentRequest()
             ->getBasePath().'/'.$this->publicAssetBaseUrl.'/'.$path;
     }
+
+    private function uploadFile(File $file, string $directory, bool $isPublic)
+    {
+        if ($file instanceof UploadedFile) {
+            $originalFilename = $file->getClientOriginalName();
+        } else {
+            $originalFilename = $file->getFilename();
+        }
+        $newFilename = Urlizer::urlize(pathinfo($originalFilename, PATHINFO_FILENAME)).'-'.uniqid().'.'.$file->guessExtension();
+
+        $stream = fopen($file->getPathname(), 'r');
+        $result = $this->filesystem->writeStream(
+            self::ARTICLE_IMAGE . '/' . $newFilename,
+            $stream
+        );
+
+        if ($result === false) {
+            throw new \Exception(sprintf('Could not write uploaded file "%s"', $newFilename));
+        }
+
+        if (is_resource($stream)) {
+            fclose($stream);
+        }
+    }
 }
